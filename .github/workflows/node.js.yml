# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # build:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       node-version: [14.x]
  #       # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Use Node.js ${{ matrix.node-version }}
  #     uses: actions/setup-node@v3
  #     with:
  #       node-version: ${{ matrix.node-version }}
  #       cache: 'npm'
  #   # - run: npm ci
  #   - run: npm run build --if-present
  #   - run: npm test

  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: install ssh keys
  #     # check this thread to understand why its needed:
  #     # https://stackoverflow.com/a/70447517
  #     run: |
  #       install -m 600 -D /dev/null ~/.ssh/id_rsa
  #       echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
  #       ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
  #   - name: Deploy to server via SSH
  #     uses: appleboy/ssh-action@master
  #     with:
  #       host: ${{ secrets.SERVER_HOST }}
  #       username: ${{ secrets.SERVER_USERNAME }}
  #       password: ${{ secrets.SERVER_PASSWORD }}
  #       # key: ${{ secrets.SERVER_PRIVATE_KEY }}
  #       # host: ${{ secrets.SSH_HOST }}
  #       # username: ${{ secrets.SSH_USER }}
  #       script: |
  #         # cd /httpdocs
  #         git pull
  #         npm install --production
  #         pm2 restart your-app-name
  # run_pull:
  #   name: run pull
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: install ssh keys
  #     # check this thread to understand why its needed:
  #     # https://stackoverflow.com/a/70447517
  #     run: |
  #       install -m 600 -D /dev/null ~/.ssh/id_rsa
  #       echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
  #       ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
  #   - name: connect and pull
  #     run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd /httpdocs/xxx/my-app && git checkout main && git pull && exit"
  #   - name: cleanup
  #     run: rm -rf ~/.ssh
  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: install ssh keys
  #     # check this thread to understand why its needed:
  #     # https://stackoverflow.com/a/70447517
  #     run: |
  #       install -m 600 -D /dev/null ~/.ssh/id_rsa
  #       echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
  #       ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
  #   - name: connect and pull
  #     run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "mkdir -p /httpdocs/test_build && git pull && exit"
  #   - name: cleanup
  #     run: rm -rf ~/.ssh
  run_pull:
    name: run pull and deploy
    runs-on: ubuntu-latest
    steps:
    - name: install ssh keys
      # check this thread to understand why its needed:
      # https://stackoverflow.com/a/70447517
      run: |
        install -m 600 -D /dev/null ~/.ssh/id_rsa
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
    - name: connect and pull
      run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd /var/www/vhosts/myapp.csplay9game.com/my-app && git checkout main && git pull && exit"
    # - name: build
    #   run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd /var/www/vhosts/myapp.csplay9game.com/my-app && npm install && npm run build && exit"
    # - name: copy file build to httpdocs
    #   run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cp -r /var/www/vhosts/myapp.csplay9game.com/my-app/build/* /var/www/vhosts/myapp.csplay9game.com/httpdocs && exit"
    - name: cleanup
      run: rm -rf ~/.ssh
 
